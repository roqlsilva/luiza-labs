plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

apply from: "${rootProject.projectDir}/versions.gradle"

android {
    namespace 'br.com.roqls23.desafio.luizalabs'
    compileSdk 34

    defaultConfig {
        applicationId "br.com.roqls23.desafio.luizalabs"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.1'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation "androidx.core:core-ktx:${versions.coreKtx}"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:${versions.lifecycleRuntimeKtx}"
    implementation "androidx.activity:activity-compose:${versions.activityCompose}"
    implementation platform("androidx.compose:compose-bom:${versions.composeBom}")
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    testImplementation "junit:junit:${versions.junit}"
    androidTestImplementation "androidx.test.ext:junit:${versions.junitExt}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${versions.espressoCore}"
    androidTestImplementation platform("androidx.compose:compose-bom:${versions.composeBom}")
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    // Hilt
    implementation "com.google.dagger:hilt-android:${versions.hilt}"
    implementation "androidx.hilt:hilt-navigation-compose:${versions.hiltNavigationCompose}"
    kapt "com.google.dagger:hilt-compiler:${versions.hiltCompiler}"

    // Room
    implementation "androidx.room:room-runtime:${versions.room}"
    implementation "androidx.room:room-ktx:${versions.room}"
    annotationProcessor "androidx.room:room-compiler:${versions.room}"
    //noinspection KaptUsageInsteadOfKsp
    kapt "androidx.room:room-compiler:${versions.room}"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-moshi:${versions.retrofit}"
    implementation "com.squareup.moshi:moshi-kotlin:${versions.moshiKotlin}"
    //noinspection KaptUsageInsteadOfKsp
    kapt "com.squareup.moshi:moshi-kotlin-codegen:${versions.moshiKotlinCodegen}"

    // OkHttp
    // define a BOM and its version
    implementation platform("com.squareup.okhttp3:okhttp-bom:${versions.okhttp}")
    // define any required OkHttp artifacts without version
    implementation "com.squareup.okhttp3:okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor"

    // Compose Navigation
    implementation "androidx.navigation:navigation-compose:${versions.composeNavigation}"
}

// Allow references to generated code
kapt {
    correctErrorTypes true
}